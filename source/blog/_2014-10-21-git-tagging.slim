textile:

  If you're new to <a href="http://git-scm.com/" target="_blank">Git</a> or want to know a little more about its basics and its distributed model, do not hesitate to read the "Introduction to Git":/blog/introducing-git/ article.

  Tagging is another great feature Git provides. A tag acts as a pointer to an specific commit, easing its identification. Usually it's used to mark release points on codebases (e.g. v0.1.0, v1.0, etc).

  h3(#lightweight-and-annotated-tags). Lightweight and Annotated Tags

  Git provides two types of tags: lightweight and annotated. "A lightweight tag is very much like a branch that doesn’t change — it’s just a pointer to a specific commit." (Chacon 39)

  To create a lightweight tag you run:

  <code class='inline' data-language='shell'>
  $ git tag tag-name
  </code>

  After that you can go to an specific tag by running:

  <code class='inline' data-language='shell'>
  $ git checkout tag-name
  </code>

  That's much easier than checking out an specific commit by its hash ID right?

  But usually it's recommended that you create annotated tags. Annotated tags contain the tagger's name and email, the date and a message, and they can be signed and verified with <a href="https://www.gnupg.org/" target="_blank">GNU Privacy Guard</a> (GPG).

  To create an annotated tag you run:

  <code class='inline' data-language='shell'>
  $ git tag -a tag-name -m "tag message"
  </code>

  h3(#listing-your-tags). Listing Your Tags

  To list all your tags you run:

  <code class='inline' data-language='shell'>
  $ git tag
  </code>

  And to see more information about any specific (annotated) tag:

  <code class='inline' data-language='shell'>
  $ git show tag-name
  </code>

  h3(#sending-your-tags-to-your-remote-repository). Sending Your Tags to Your Remote Repository

  By default, the <code class='inline' data-language='shell'>push</code> command doesn't send tags to remote repositories. To send them you do the same thing as with branches:

  <code class='inline' data-language='shell'>
  $ git push remote-name tag-name
  </code>

  If you have several tags and want to send them at once:

  <code class='inline' data-language='shell'>
  $ git push remote-name --tags
  </code>

  h3(#conclusion). Conclusion

  That's it. Git makes it super easy and fast to tag your codebase. Tagging is a best-practice on not trivial projects, as it makes it very simple to find release points on your codebase. Every time you're going to make a release, deploying code to a server, consider tagging your codebase before doing so.

  h3(#related-posts). Related Posts

  "Git Branching and Merging":/blog/git-branching-and-merging/
  "Git Remote and Tracking Branches":/blog/git-remote-and-tracking-branches/
  "Git Basic Commands Explained":/blog/git-basic-commands-explained/
  "Git Workflow":/blog/git-workflow/
  "Introduction to Git":/blog/introducing-git/

  h3(#interesting-links). Interesting Links

  <a href="http://git-scm.com/" target="_blank">Git</a>
  <a href="https://git-scm.com/book/en/v2" target="_blank">Pro Git Book</a>

  h3(#bibliography). Bibliography

  Chacon, Scott. _Pro Git_. Apress, 2009.
