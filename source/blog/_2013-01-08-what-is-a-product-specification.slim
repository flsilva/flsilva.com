textile:
  A product specification (often abbreviated as _spec_) is a document or set of documents describing what a product is, what it is supposed to do and what it is not supposed to do. It's a key documentation and must exist for any product, even the smallest one. Working without such a documentation would be like working in the dark, and it would be impossible to define good development and testing practices.

  The _spec_ has solid parameters needed to determine software's quality. Without it we are not able to state whether the software has or has not "_bugs_":/blog/what-really-is-a-software-bug/ and whether it meets the customer needs. Also, errors in the _spec_ may lead to terrible consequences because they may be carried out to development phases, which would be extremely costly to be fixed.

  Nevertheless, that doesn't mean we need a large or complex __spec__. Its complexity and type of documents varies according to the complexity of the product itself and the software development model the team is using. On more traditional models like <a href="http://en.wikipedia.org/wiki/Waterfall_model" target="_blank">Waterfall</a> it tends to be more detailed, composed by text documents and/or <a href="http://en.wikipedia.org/wiki/Unified_Modeling_Language" target="_blank">UML</a> diagrams (e.g. <a href="http://www.sparxsystems.com/enterprise_architect_user_guide/modeling_languages/requirements_diagram.html" target="_blank">requirement</a> and <a href="http://en.wikipedia.org/wiki/Use_Case_Diagram" target="_blank">use case diagrams</a>), among other things. On modern <a href="http://en.wikipedia.org/wiki/Agile_software_development" target="_blank">Agile</a> models like <a href="http://en.wikipedia.org/wiki/Scrum_(development)" target="_blank">Scrum</a> it tends to be more succinct, and may be composed by a <a href="http://www.mountaingoatsoftware.com/scrum/product-backlog" target="_blank">Product Backlog</a> and <a href="http://www.agilemodeling.com/artifacts/userStory.htm" target="_blank">User Stories</a>.

  h3(#related-posts). Related Posts

  "What really is a Software Bug?":/blog/what-really-is-a-software-bug/
  "What is Software Testing?":/blog/what-is-software-testing/
  "Introduction to UML Concepts":/blog/introduction-to-uml-concepts/

  h3(#interesting-links). Interesting Links

  <a href="http://en.wikipedia.org/wiki/Specification" target="_blank">Specification (technical standard) (Wikipedia)</a>
  <a href="http://www.mountaingoatsoftware.com/scrum/product-backlog" target="_blank">Product Backlog</a>
  <a href="http://www.agilemodeling.com/artifacts/userStory.htm" target="_blank">User Stories</a>
  <a href="http://en.wikipedia.org/wiki/Unified_Modeling_Language" target="_blank">UML (Wikipedia)</a>

  h3(#bibliography). Bibliography

  Patton, Ron. _Software Testing_. 2nd ed. Sams, 2005.
